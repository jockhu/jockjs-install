#!/bin/bash
commond=$1
version=$2
three=$3
pwdPath=`pwd`
sys=`uname -a | awk -F " " '{print $1}'`

if [ "$commond" = "-h" ];then
    echo ""
    echo ""
    echo "Exemple..."
    echo ""
    echo "jockjs install [touch | user | developers | broker] domain"
    echo "  domain (domain eg: jockjs.jockhu.dev.anjuke.com)"
    echo ""
    echo "jockjs [start | restart | stop] [touch | user | developers | broker]"
    echo ""
    echo "jockjs list"
    echo ""
    echo "jockjs pull [touch | user | developers | broker] co master [jockjs|jockcss|jockjs-components|...]"
    echo ""
    echo ""
    exit;
fi

if [ -z "$three" ];then
    jockjsSite=fp00
else
    jockjsSite=$three
fi
forever=/usr/local/bin/forever
jockjsPath=/home/www/release/node
jockjsLogPath=/data1/logs/node
jockjsConfPath=/home/www/config/node

if [ ! -e "$forever" ];then
  forever=/home/www/bin/forever
else
  forever=forever
fi

function forever_action(){
  if [ "$1" = "start" -o "$1" = "restart" -o "$1" = "reload" ];then
    forever_stop $2
    forever_start $2
  fi
  if [ "$1" = "stop" ];then
    forever_stop $2
  fi
}

function forever_start(){
  if [ -z "$1" ];then
    sitePath=fp00
  else
    sitePath=$1
  fi
  $forever start -a -l $jockjsLogPath/js.log $jockjsPath/$sitePath/jockjs/service.js $jockjsConfPath/$sitePath.js
  $forever start -a -l $jockjsLogPath/css.log $jockjsPath/$sitePath/jockcss/service.js $jockjsConfPath/$sitePath.css
}

function forever_stop(){
  if [ -z "$1" ];then
    sitePath=fp00
  else
    sitePath=$1
  fi
  $forever stop $jockjsPath/$sitePath/jockjs/service.js
  $forever stop $jockjsPath/$sitePath/jockcss/service.js
}

function forever_list(){
  $forever list
}

function git_pull(){
  cd $jockjsPath/$1
  if [[ ! -z "$4" && -e $jockjsPath/$1/$4 ]];then
     echo "current path : $jockjsPath/$1/$4";
     cd $jockjsPath/$1/$4
     git $2 $3
     git branch
     git pull --rebase;
  else
    for path in `ls`
    do
    cd $jockjsPath/$1/$path;
    echo "current path : $jockjsPath/$1/$path";
    if [ ! -z "$2" ];then
        git $2 $3
    fi
    git branch 
    git pull --rebase; 
    done;
  fi
  exit 0 
}

function git_co_master(){
  cd $jockjsPath/$1
  for path in `ls`
  do
    cd $jockjsPath/$1/$path;
    echo "current path : $jockjsPath/$1/$path";
    git co master
    git pull --rebase; 
  done;  
}

function git_install(){
  jockjsSite=$1
  if [ -z "$jockjsSite" ];then
    echo "Missing parameters."
  fi
  
  if [ "$jockjsSite" = "touch" -o "$jockjsSite" = "developers" -o "$jockjsSite" = "user" -o "$jockjsSite" = "broker" ];then
    jockjsPath=/home/www/release/node/$jockjsSite
    if [ ! -e $jockjsPath ];then
      mkdir -p $jockjsPath
    fi

    echo "Setting jockjs path: $jockjsPath"

    cd $jockjsPath
  
    git clone git@git.corp.anjuke.com:jockhu/jockjs-config
    git clone git@git.corp.anjuke.com:aifang/jockjs
    git clone git@git.corp.anjuke.com:aifang/jockcss
    git clone git@git.corp.anjuke.com:site/jockjs-components  
    if [ "$jockjsSite" = "touch" ];then
      git clone git@git.corp.anjuke.com:site/jockjs-touch
    fi 
    if [ "$jockjsSite" = "developers" ];then
      git clone git@git.corp.anjuke.com:site/jockjs-business-developers
    fi
    if [ "$jockjsSite" = "user" ];then
      git clone git@git.corp.anjuke.com:site/jockjs-business-user
    fi
    if [ "$jockjsSite" = "broker" ];then
      git clone git@git.corp.anjuke.com:site/jockjs-business-broker
    fi
  else
    echo "Parameters error."
  fi
}

function config_install(){
  site=$1
  if [ ! -e $jockjsConfPath ];then
    mkdir -p $jockjsConfPath
    echo "Path $jockjsConfPath created."
  fi
  if [ ! -e $jockjsConfPath/$site.js ];then
    cp -r $jockjsPath/jockjs-config/conf/$site.js $jockjsConfPath/
    cp -r $jockjsPath/jockjs-config/conf/$site.css $jockjsConfPath/
    echo "Copy config files..."
  fi
}

function config_nginx(){
  domain=$1
  if [ -e /etc/nginx/sites-enabled/ ];then
    sudo cp -r $jockjsPath/jockjs-config/conf/jockjs-nginx-dev.conf /etc/nginx/sites-enabled/
    if [ "$sys" = "Darwin" ];then
        sudo sed -i "" s#SERVERNAME#$domain#g /etc/nginx/sites-enabled/jockjs-nginx-dev.conf
    else
        sudo sed -i s#SERVERNAME#$domain#g /etc/nginx/sites-enabled/jockjs-nginx-dev.conf
    fi
    echo "/etc/nginx/sites-enabled/jockjs-nginx-dev.conf created."
    sudo nginx -s reload
  fi
}

function config_apache(){
  domain=$1
  if [ -e /etc/apache2/sites-enabled/ ];then
    sudo cp -r $jockjsPath/jockjs-config/conf/jockjs-apache-dev.conf /etc/apache2/sites-enabled/
    if [ "$sys" = "Darwin" ];then
        sudo sed -i "" s#SERVERNAME#$domain#g /etc/apache2/sites-enabled/jockjs-apache-dev.conf
    else
        sudo sed -i s#SERVERNAME#$domain#g /etc/apache2/sites-enabled/jockjs-apache-dev.conf
    fi
    echo "/etc/apache2/sites-enabled/jockjs-apache-dev.conf created."
    sudo service apache2 reload
  fi
}

function nodejs_install(){
  if [ ! -e "/usr/local/bin/node" ];then
    cd $jockjsPath/jockjs-config/
    tar -zxf node-*
    cd node-*
    ./configure
    make
    sudo make install
    echo "Node install finished."
  fi
  if [ ! -e "/usr/local/bin/forever" ];then
    cd /usr/local/lib/node_modules
    sudo npm install forever -g
    echo "Forever install finished."
  fi
  if [ ! -e "/usr/local/lib/node_modules/UglifyJS" ];then
    cd /usr/local/lib/node_modules
    sudo git clone https://github.com/mishoo/UglifyJS.git
    echo "UglifyJS install finished."
  fi
  mkdir -p ~/.node_libraries
  cd ~/.node_libraries
  rm uglify-js.js
  ln -s /usr/local/lib/node_modules/UglifyJS/uglify-js.js
}

function bash_install(){
  if [ ! -e ~/bin ];then
    mkdir -p ~/bin
    echo "Path ~/bin created."
  fi
  if [ ! -e ~/bin/jockjs ];then
    cp -r $jockjsPath/jockjs-config/jockjs ~/bin/jockjs
    echo "Copy files jockjs ..."
    sudo echo 'export PATH=~/bin:$PATH' >> ~/.profile
  fi
  if [ ! -z "$three" ];then
    ~/bin/jockjs domain "$version" "$three" 
    echo "Base domian replaced."
  fi
}

function clean_install(){
  rm -rf $jockjsConfPath 
  rm -rf $jockjsPath
  rm -rf ~/bin/jockjs
  echo "Jockjs cleand."
}

if [ "$commond" = "uninstall" ];then
   clean_install
   sudo rm -rf /usr/local/{bin/{node,npm},lib/node_modules/npm,lib/node,share/man/*/node.*}
   rm -rf ~/.node_libraries
   echo "Nodejs removed."
   exit 0
fi

if [ "$commond" = "install" ];then
   sudo mkdir -p $jockjsLogPath
   sudo chown -R $USER:$GROUP $jockjsLogPath

   if [ -z "$version" ];then
     echo "Missing parameters."
     exit;
   fi

   if [ "$version" = "clean" ];then
      clean_install
      exit 0
   fi

   if [ -z "$three" ];then
     echo "Please enter your base domain"
     echo "eg: install [touch | user | developers | broker] jockjs.xxx.dev.anjuke.com"
   else
     git_install "$version"
     config_install "$version"
     config_nginx "$three"
     config_apache "$three"
     bash_install
     nodejs_install
     sudo pkill node
#     rm -rf $jockjsPath/jockjs-config
     ~/bin/jockjs start $version 
     echo "Finished. Bye! "
   fi
   exit 0
fi



if [[ "$commond" = "domain" && ! -z "$version" && ! -z "$three" ]];then
    cd $jockjsConfPath
    echo "$three,$version"
    
    if [ "$sys" = "Darwin" ];then
      sed -i "" s#SERVERNAME#$three#g $version.js 
      sed -i "" s#SERVERNAME#$three#g $version.css 
    else
      sed -i s#SERVERNAME#$three#g $version.js 
      sed -i s#SERVERNAME#$three#g $version.css 
    fi
    echo ""
    echo "Server Name change to : $three"
    exit 0
fi


if [[ "$commond" = "create" && ! -z "$version" ]];then
    v=${version:2:2}
    cd $jockjsPath
    rm -rf "$version"
    cp -r "$jockjsSite" "$version"
    #git_co_master "$version"
    cd $jockjsConfPath
    cp "$jockjsSite".js "$version".js
    cp "$jockjsSite".css "$version".css
    sed -i s#$jockjsSite#$version#g "$version".js
    sed -i s#$jockjsSite#$version#g "$version".css
    sed -i s#52100#521$v#g "$version".js
    sed -i s#52200#522$v#g "$version".css
    echo ""
    echo "$version created. "
    exit
fi


if [ "$commond" = "pull" ];then
    if [ ! -z "$version" ];then
         git_pull "$version" "$three" "$4" "$5"
    else
         echo "use jockjs pull touch"
    fi
    exit 0 
fi


if [ "$commond" = "reload" -o "$commond" = "restart" -o "$commond" = "start" -o "$commond" = "stop" -o "$commond" = "list" ];then
    if [ "$commond" = "list" ];then
        forever_$commond
        exit
    fi 
    if [ ! -z "$version" ]; then 
        forever_action "$commond" "$version"
    else
        echo "Missing parameters."
    fi
else
    echo "use jockjs [restart|reload|stop|start|list|pull] [touch|user|developers|broker]"
fi


